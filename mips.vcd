$date
	Mon Jul 22 03:13:47 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module test $end
$var reg 1 ! PC $end
$var reg 1 " clk1 $end
$var reg 1 # clk2 $end
$var integer 32 $ k [31:0] $end
$scope module mips $end
$var wire 1 " clk1 $end
$var wire 1 # clk2 $end
$var reg 1 % BRANCH_TAKEN $end
$var reg 32 & EX_MEM_ALUOUT [31:0] $end
$var reg 32 ' EX_MEM_B [31:0] $end
$var reg 1 ( EX_MEM_COND $end
$var reg 32 ) EX_MEM_IR [31:0] $end
$var reg 3 * EX_MEM_TYPE [2:0] $end
$var reg 1 + HALTED $end
$var reg 32 , ID_EX_A [31:0] $end
$var reg 32 - ID_EX_B [31:0] $end
$var reg 32 . ID_EX_IMM [31:0] $end
$var reg 32 / ID_EX_IR [31:0] $end
$var reg 32 0 ID_EX_NPC [31:0] $end
$var reg 3 1 ID_EX_TYPE [2:0] $end
$var reg 32 2 IF_ID_IR [31:0] $end
$var reg 32 3 IF_ID_NPC [31:0] $end
$var reg 32 4 MEM_WB_ALUOUT [31:0] $end
$var reg 32 5 MEM_WB_IR [31:0] $end
$var reg 32 6 MEM_WB_LMD [31:0] $end
$var reg 3 7 MEM_WB_TYPE [2:0] $end
$var reg 32 8 PC [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 8
bx 7
bx 6
bx 5
bx 4
bx 3
bx 2
bx 1
bx 0
bx /
bx .
bx -
bx ,
0+
bx *
bx )
x(
bx '
bx &
0%
b11111 $
0#
0"
x!
$end
#2
b101 1
#5
1"
#7
b1 8
b1 3
b101000000000010000000000001010 2
b101 *
#10
0"
#15
1#
#17
b101 7
#20
b0 ,
0#
#22
b1 1
b1010 .
b101000000000010000000000001010 /
b1 0
b1 -
#25
b1010 &
1"
#27
b101000000000010000000000001010 )
b1 *
b10 8
b10 3
b101000000000100000000000010010 2
#30
0"
#35
1#
#37
b1010 4
b101000000000010000000000001010 5
b1 7
#40
0#
#42
b10010 .
b101000000000100000000000010010 /
b10 0
b10 -
#45
b10010 &
1"
#47
b11 8
b11 3
b101000000000110000000000011001 2
b101000000000100000000000010010 )
#50
0"
#55
1#
#57
b10010 4
b101000000000100000000000010010 5
#60
0#
#62
b11001 .
b101000000000110000000000011001 /
b11 0
b11 -
#65
b11001 &
1"
#67
b101000000000110000000000011001 )
b100 8
b100 3
b1100111001110111100000000000 2
#70
0"
#75
1#
#77
b11001 4
b101000000000110000000000011001 5
#80
0#
#82
b0 1
b111100000000000 .
b1100111001110111100000000000 /
b100 0
b111 -
b111 ,
#85
b111 &
1"
#87
b101 8
b101 3
b110011100111100000000000 2
b1100111001110111100000000000 )
b0 *
#90
0"
#95
1#
#97
b111 4
b1100111001110111100000000000 5
b0 7
#100
0#
#102
b110011100111100000000000 /
b101 0
b1110 -
b110 ,
#105
b10100 &
1"
#107
b110011100111100000000000 )
b110 8
b110 3
b1000100010000000000000 2
#110
0"
#115
1#
#117
b10100 4
b110011100111100000000000 5
#120
0#
#122
b10000000000000 .
b1000100010000000000000 /
b110 0
b10 -
b1 ,
#125
b11 &
1"
#127
b111 8
b111 3
b1100111001110111100000000000 2
b1000100010000000000000 )
#130
0"
#135
1#
#137
b11 4
b1000100010000000000000 5
#140
0#
#142
b111100000000000 .
b1100111001110111100000000000 /
b111 0
b111 -
b111 ,
#145
b111 &
1"
#147
b1100111001110111100000000000 )
b1000 8
b1000 3
b100000110010100000000000 2
#150
0"
#155
1#
#157
b111 4
b1100111001110111100000000000 5
#160
0#
#162
b10100000000000 .
b100000110010100000000000 /
b1000 0
b11 -
b100 ,
#165
1"
#167
b1001 8
b1001 3
b11111100000000000000000000000000 2
b100000110010100000000000 )
#170
0"
#175
1#
#177
b100000110010100000000000 5
#180
b0 -
b0 ,
0#
#182
b101 1
b0 .
b11111100000000000000000000000000 /
b1001 0
#185
1"
#187
b11111100000000000000000000000000 )
b101 *
b1010 8
b1010 3
bx 2
#190
0"
#195
1#
#197
b11111100000000000000000000000000 5
b101 7
#200
0#
#202
bx .
bx /
b1010 0
bx -
bx ,
#205
1"
#207
b1011 8
b1011 3
bx )
#210
0"
#215
1#
#217
bx 5
#220
0#
#222
b1011 0
#225
1"
#227
b1100 8
b1100 3
#230
0"
#235
1#
#240
0#
#242
b1100 0
#245
1"
#247
b1101 8
b1101 3
#250
0"
#255
1#
#260
0#
#262
b1101 0
#265
1"
#267
b1110 8
b1110 3
#270
0"
#275
1#
#280
0#
b1000 $
#282
b1110 0
#285
1"
#287
b1111 8
b1111 3
#290
0"
#295
1#
#300
0#
